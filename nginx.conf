worker_processes 1; # Configuramos el número de procesos de trabajo de Nginx

events {
    worker_connections 1024; # Número máximo de conexiones simultáneas por proceso de trabajo
}

http {
    sendfile on; # Habilitamos el envío eficiente de archivos
    tcp_nopush on; # Optimizamos el envío de paquetes TCP
    tcp_nodelay on; # Reducimos la latencia en conexiones TCP
    keepalive_timeout 65; # Tiempo de espera para mantener conexiones activas
    types_hash_max_size 2048; # Tamaño máximo del hash de tipos MIME
    include mime.types; # Incluimos los tipos MIME
    default_type application/octet-stream; # Tipo MIME por defecto

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Protocolos SSL recomendados
    ssl_prefer_server_ciphers on; # Preferimos los cifrados del servidor sobre los del cliente

    server {
        listen 80; # Escuchamos en el puerto 80 para HTTP
        server_name localhost; # Reemplazar con el dominio o IP del servidor
        return 301 https://$host$request_uri; # Redirigimos todo el tráfico HTTP a HTTPS
    }

    server {
        listen 443 ssl; # Escuchamos en el puerto 443 para HTTPS
        server_name localhost; # Usamos localhost como nombre del servidor

        ssl_certificate /etc/nginx/certs/certificate.crt; # Ruta al certificado SSL
        ssl_certificate_key /etc/nginx/certs/private.key; # Ruta a la clave privada del certificado SSL

        location / {
            proxy_pass http://backend:5000; # Redirigimos las solicitudes al servicio backend en el puerto 5000
            proxy_set_header Host $host; # Configuramos el encabezado Host
            proxy_set_header X-Real-IP $remote_addr; # Pasamos la IP real del cliente
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Pasamos la cadena de IPs del cliente
            proxy_set_header X-Forwarded-Proto https; # Indicamos que la solicitud original fue HTTPS
        }
    }
}